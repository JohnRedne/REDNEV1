# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17QyCGfHTFuPrX2e-8nymo0_r6gZ3NaRs
"""

from flask import Flask, request, send_file, jsonify
from obspy import read
import requests
import io
import datetime
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('Agg')  # Para evitar problemas de GUI en entornos sin pantalla

app = Flask(__name__)

# Función auxiliar para verificar el intervalo de tiempo
def calculate_time_difference(start, end):
    start_time = datetime.datetime.fromisoformat(start)
    end_time = datetime.datetime.fromisoformat(end)
    difference = end_time - start_time
    return difference.total_seconds() / 60  # Diferencia en minutos

# Ruta principal para decidir entre sismograma y helicorder
@app.route('/generate_graph', methods=['GET'])
def generate_graph():
    try:
        # Obtener los parámetros de la URL
        start = request.args.get('start')
        end = request.args.get('end')

        # Verificar el intervalo de tiempo
        interval_minutes = calculate_time_difference(start, end)

        # Seleccionar el tipo de gráfico según el intervalo
        if interval_minutes <= 30:
            return generate_sismograma()  # Menos de 30 minutos, generar sismograma
        else:
            return generate_helicorder()  # 30 minutos o más, generar helicorder

    except Exception as e:
        return jsonify({"error": f"Ocurrió un error: {str(e)}"}), 500

# Función para generar sismograma
@app.route('/generate_sismograma', methods=['GET'])
def generate_sismograma():
    # (Aquí va el código existente para el sismograma que ya tienes en `app.py`)
    pass  # Elimina este pass y coloca el código de tu sismograma aquí

# Función para generar helicorder
@app.route('/generate_helicorder', methods=['GET'])
def generate_helicorder():
    # (Aquí va el código que compartiste para el helicorder)
    pass  # Elimina este pass y coloca el código de tu helicorder aquí

# Ejecutar el servidor Flask
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)